# Lot's of tokens being used here. A guide:
# GITHUB_TOKEN: provided by github by default. Give access to publish to the
#   pg-to-dbml Github Packages.
# NODE_AUTH_TOKEN: A Github Personal Access Token generated by polaris-aws-build.
#   Has read rights for Github Packages, so the eslint-config-polaris package can
#   be pulled on `npm install`.
# NPM_TOKEN: A token from NPM Registry with publish privileges, generated by the
#   polaris-build user.

name: Publish to Github Packages and NPM
on:
  push:
    branches:
      - master
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Use Node
      uses: actions/setup-node@v1
      with:
        node-version: '13.x'
        registry-url: https://npm.pkg.github.com
        scope: '@polarislabs'
    - run: npm install
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NODE_AUTH_TOKEN }}
  publish-to-npm:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Use Node
      uses: actions/setup-node@v1
      with:
        node-version: '13.x'
        registry-url: https://registry.npmjs.org
    - run: npm publish --access public
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
  publish-to-github:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Use Node
      uses: actions/setup-node@v1
      with:
        node-version: '13.x'
        registry-url: https://npm.pkg.github.com
        scope: '@polarislabs'
    - name: Publish to Github Packages
      run: npm publish
      env:
        NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}